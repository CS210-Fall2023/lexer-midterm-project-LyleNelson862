module (UNK)
list (UNK)
interface (UNK)
/* (UNK)
* (UNK)
types (UNK)
*/ (UNK)
type (UNK)
list_type; (UNK)
type (UNK)
listel_type; (UNK)
subtype (UNK)
list_size_type (UNK)
is (UNK)
natural; (UNK)
/* (UNK)
* (UNK)
routines (UNK)
*/ (UNK)
mutator (UNK)
append(l: (UNK)
in (UNK)
out (UNK)
list_type; (UNK)
x: (UNK)
in (UNK)
ptr_type); (UNK)
accessor (UNK)
data(e: (UNK)
listel_type) (UNK)
return (UNK)
ptr_type; (UNK)
function (UNK)
find(l: (UNK)
list_type; (UNK)
x: (UNK)
ptr_type) (UNK)
return (UNK)
listel_type; (UNK)
accessor (UNK)
head(l: (UNK)
list_type) (UNK)
return (UNK)
listel_type; (UNK)
mutator (UNK)
insert(l: (UNK)
in (UNK)
out (UNK)
list_type; (UNK)
e: (UNK)
in (UNK)
out (UNK)
listel_type; (UNK)
x: (UNK)
in (UNK)
ptr_type); (UNK)
accessor (UNK)
next(e: (UNK)
listel_type) (UNK)
return (UNK)
listel_type; (UNK)
mutator (UNK)
prepend(l: (UNK)
in (UNK)
out (UNK)
list_type; (UNK)
x: (UNK)
in (UNK)
ptr_type); (UNK)
accessor (UNK)
prev(e: (UNK)
listel_type) (UNK)
return (UNK)
listel_type; (UNK)
mutator (UNK)
remove(l: (UNK)
in (UNK)
out (UNK)
list_type; (UNK)
e: (UNK)
in (UNK)
out (UNK)
listel_type); (UNK)
function (UNK)
size(l: (UNK)
list_type) (UNK)
return (UNK)
list_size_type; (UNK)
end (UNK)
list; (UNK)
