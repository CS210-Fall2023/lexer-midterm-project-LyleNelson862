module (UNK)
list (UNK)
interface (UNK)
/ (Operator)
 (Operator)
* (Operator)
types (UNK)
* (Operator)
 (Operator)
type (UNK)
list_type; (Operator)
type (UNK)
listel_type; (Operator)
subtype (UNK)
list_size_type (UNK)
is (UNK)
natural; (Operator)
/ (Operator)
 (Operator)
* (Operator)
routines (UNK)
* (Operator)
 (Operator)
mutator (UNK)
 (UNK)
append( (Operator)
: (Operator)
in (UNK)
out (UNK)
list_type; (Operator)
x: (Operator)
in (UNK)
ptr_type) (Operator)
 (Operator)
accessor (UNK)
data( (Operator)
: (Operator)
listel_type) (Operator)
return (UNK)
ptr_type; (Operator)
function (UNK)
find( (Operator)
: (Operator)
list_type; (Operator)
x: (Operator)
ptr_type) (Operator)
return (UNK)
listel_type; (Operator)
accessor (UNK)
head( (Operator)
: (Operator)
list_type) (Operator)
return (UNK)
listel_type; (Operator)
mutator (UNK)
 (UNK)
insert( (Operator)
: (Operator)
in (UNK)
out (UNK)
list_type; (Operator)
e: (Operator)
in (UNK)
out (UNK)
listel_type; (Operator)
x: (Operator)
in (UNK)
ptr_type) (Operator)
 (Operator)
accessor (UNK)
next( (Operator)
: (Operator)
listel_type) (Operator)
return (UNK)
listel_type; (Operator)
mutator (UNK)
 (UNK)
prepend( (Operator)
: (Operator)
in (UNK)
out (UNK)
list_type; (Operator)
x: (Operator)
in (UNK)
ptr_type) (Operator)
 (Operator)
accessor (UNK)
prev( (Operator)
: (Operator)
listel_type) (Operator)
return (UNK)
listel_type; (Operator)
mutator (UNK)
 (UNK)
remove( (Operator)
: (Operator)
in (UNK)
out (UNK)
list_type; (Operator)
e: (Operator)
in (UNK)
out (UNK)
listel_type) (Operator)
 (Operator)
function (UNK)
size( (Operator)
: (Operator)
list_type) (Operator)
return (UNK)
list_size_type; (Operator)
end (UNK)
list; (Operator)
